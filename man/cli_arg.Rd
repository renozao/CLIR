% Generated by roxygen2 (4.1.1): do not edit by hand
\name{cli_arg}
\alias{cli_arg}
\title{Extracting Command Line Arguments}
\usage{
cli_arg(name, default = NULL, alt = NA, required = FALSE,
  trailing.only = TRUE, as.is = TRUE, args = commandArgs(trailing.only),
  with.details = FALSE, error = TRUE)
}
\arguments{
  \item{name}{parameter name, e.g., \code{'-f'}}

  \item{default}{default value to return if parameter is missing}

  \item{alt}{alternative parameter name, e.g. long form code{'--file'}}

  \item{required}{logical that indicates if the parameter is required.}

  \item{trailing.only}{logical that indicates if the parameter should be looked
in the trailing arguments only, or in the arguments meant for \emph{R} or \emph{Rscript}.}

  \item{as.is}{logical that indicates if the name should be looked up as is in the
command line argument or with a double/single dash prefix.}

  \item{args}{vector of command line argument to parse}

  \item{with.details}{logical that indicates if details about the argument match should be returned.}

  \item{error}{logical that indicates if an error should be raised when the command line arguments
do not meet the constrains, e.g., required.}
}
\description{
  Extracting Command Line Arguments
}

